<block>
  <name>OpenCL Root Raised Cosine Filter</name>
  <key>clenabled_clRootRaisedCosineFilter</key>
  <category>[OpenCL-Enabled]</category>
  <import>import clenabled</import>
  <import>from gnuradio.filter import firdes</import>
  <make>clenabled.clLowPassFilter($openCLPlatform,$decimation,firdes.root_raised_cosine(
	$gain, $samp_rate, $sym_rate, $alpha, $ntaps),1)</make>
	<callback>set_taps2(clenabled.firdes.root_raised_cosine($gain, $samp_rate, $sym_rate, $alpha, $ntaps))</callback>
	<param>
		<name>OpenCL Platform</name>
		<key>openCLPlatform</key>
		<type>enum</type>
		<option>
			<name>GPU</name>
			<key>1</key>
		</option>
		<option>
			<name>Accelerator</name>
			<key>2</key>
		</option>
		<option>
			<name>CPU</name>
			<key>3</key>
		</option>
		<option>
			<name>Any</name>
			<key>4</key>
		</option>
	</param>
	<param>
		<name>Sample Rate</name>
		<key>samp_rate</key>
		<value>samp_rate</value>
		<type>real</type>
	</param>
	<param>
		<name>Symbol Rate</name>
		<key>sym_rate</key>
		<value>1.0</value>
		<type>real</type>
	</param>
	<param>
		<name>Alpha</name>
		<key>alpha</key>
		<value>0.35</value>
		<type>real</type>
	</param>
	<param>
		<name>Num Taps</name>
		<key>ntaps</key>
		<value>11*samp_rate</value>
		<type>int</type>
	</param>
  <sink>
    <name>in</name>
    <type>complex</type>
  </sink>
  <source>
    <name>out</name>
    <type>complex</type>
  </source>
	<doc>
This filter is an OpenCL enabled version of the built-in root raised cosine filter.
	</doc>
</block>
